{"version":3,"sources":["../../src/Utils.ts","../../src/scatterPlot.ts","../../src/createChart.ts","../../src/beeswarm.ts","../../src/index.tsx","rapidTooltip.ts","App.tsx","index.tsx"],"names":["appendQuadrantLabel","container","labelFont","color","onMouseMove","id","label","textParts","x","d3","y","pageY","onMouseLeave","d","text","i","decimalToFraction","top","decimal","bottom","Math","gcd","a","b","display","formatTicks","value","scaledValue","parseFloat","input","svg","data","size","axisLabels","axisMinMax","averageLineText","quadrantLabels","zeroAxisLabel","axisLabelColor","quadrantLabelColor","quadrantBackgroundColors","onQuadrantLabelMouseMove","onQuadrantLabelMouseLeave","yLineText","partition","scatterplotData","beeswarmData","margin","right","left","width","height","beeswarmWidth","scatterplotWidth","smallerSize","radiusAdjuster","radius","scatterplot","beeswarm","allXValues","minX","maxX","isNaN","min","xScale","numberOfXAxisTicks","max","allYValues","rawMinY","rawMaxY","minY","maxY","largerAbsY","yScale","axistFontSize","axisSmallTextFontSize","arrowPadding","bottomAxisLabel","arrowLeft","leftAxisLabel","chartWidth","orginalX","orginalY","makeGridlinesY","force","simulation","fill","stroke","hoveredBackground","hoveredForeground","highlighted","getLabel","createBeeswarm","xAxis","t","makeGridlinesX","createScatterPlot","Root","styled","SizingElm","props","sizingNodeRef","useRef","svgNodeRef","useState","window","windowWidth","setWindowWidth","useEffect","updateWindowWidth","debounce","svgNode","sizingNode","select","createChart","clientHeight","ref","key","className","RapidTooltipRoot","div","Container","colorMap","App","tooltipRef","setHovered","datum","coords","node","current","industry","IndustryData","find","n","code","rows","push","undefined","toFixed","toString","innerHTML","columnCount","length","forEach","r","row","c","alignment","style","boldColumns","includes","additionalContent","additionalHTML","title","getStandardTooltip","rgba","removeHovered","useCallback","RawData","map","naics","naics_id","topLevelParentId","parent_id","parseInt","console","error","Error","parentColor","name","rca_emp","density_emp","I","II","III","IV","V","leftUp","leftDown","bottomLeft","bottomRight","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12eae40b.chunk.js","sourcesContent":["import * as d3 from 'd3';\n\nexport const appendQuadrantLabel =\n  (container: d3.Selection<any, unknown, null, undefined>,\n   labelFont: string | undefined,\n   fontSize: string,\n   color: string | undefined,\n   onMouseMove: undefined | ((quadrant: {id: string, label: string}, coords: {x: number, y: number}) => void),\n   onMouseLeave: undefined | ((quadrant: {id: string, label: string}) => void),\n ) =>\n    (xVal: number, yVal: number, textParts: string[], textAnchor: string, id: string) => {\n      const label = container.append('text')\n          .style('text-anchor', textAnchor)\n          .style('opacity', 0.8)\n          .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n          .style('font-size', fontSize)\n          .style('font-weight', '600')\n          .style('text-transform', 'uppercase')\n          .style('dominant-baseline', 'bottom')\n          .attr('fill', color ? color : '#333')\n          .attr('x', xVal)\n          .attr('y', yVal)\n          .on('mousemove', () => {\n            if (onMouseMove) {\n              onMouseMove({id, label: textParts.join(' ')}, {x: (d3 as any).event.pageX, y: (d3 as any).event.pageY})\n            }\n          })\n          .on('mouseleave', () => {\n            if (onMouseLeave) {\n              onMouseLeave({id, label: textParts.join(' ')})\n            }\n          })\n\n        label.selectAll('tspan')\n          .data(textParts)\n          .enter()\n          .append('tspan')\n          .text(d => {\n            const text = d;\n            return text !== undefined ? text : '';\n          })\n          .attr('x', xVal)\n          .attr('dx', 0)\n          .attr('dy', (_d, i) => i !== 0 ? 15 : 0);\n    };\n","import * as d3 from 'd3';\nimport {Datum, Dimensions} from './types';\nimport {appendQuadrantLabel} from './Utils';\n\nfunction gcd(a: number, b: number): number {\n  return (b) ? gcd(b, a % b) : a;\n}\n\nconst decimalToFraction = function (decimal: number) {\n  let top: number | string    = decimal.toString().replace(/\\d+[.]/, '');\n  const bottom: number  = Math.pow(10, top.length);\n  if (decimal > 1) {\n    top  = +top + Math.floor(decimal) * bottom;\n  }\n  const x = gcd(top as number, bottom);\n  return {\n    top    : (top as number / x),\n    bottom  : (bottom / x),\n    display  : (top as number / x) + ':' + (bottom / x)\n  };\n};\n\n\nconst formatTicks = (value: number) => {\n  const scaledValue = parseFloat(value.toFixed(6));\n  if (scaledValue >= 1) {\n    return scaledValue + '×';\n  } else {\n    const {top, bottom} = decimalToFraction(scaledValue);\n    return `\n      <tspan\n        style=\"baseline-shift: super;font-size:smaller;\"\n      >${top}</tspan>⁄<tspan\n        style=\"baseline-shift: sub;font-size:smaller;\"\n      >${bottom}</tspan><tspan style=\"baseline-shift: sub;\">×</tspan>\n    `;\n  }\n}\n\n\ninterface Input {\n  container: d3.Selection<any, unknown, null, undefined>;\n  // tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  chartWidth: number,\n  xScale: d3.ScaleLogarithmic<number, number, never>;\n  yScale: d3.ScaleLinear<number, number, never>;\n  margin: {\n    top: number,\n    right: number,\n    bottom: number,\n    left: number,\n  }\n  axisMinMax: {\n    minX: number,\n    maxX: number,\n    minY: number,\n    maxY: number,\n  };\n  averageLineText?: string;\n  yLineText?: string;\n  quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string};\n  quadrantBackgroundColors?: {I?: string, II?: string, III?: string, IV?: string};\n  labelFont?: string;\n  axisLabelColor: string | undefined;\n  quadrantLabelColor: string | undefined;\n  onQuadrantLabelMouseMove: undefined | ((quadrant: {id: string, label: string}, coords: {x: number, y: number}) => void);\n  onQuadrantLabelMouseLeave: undefined | ((quadrant: {id: string, label: string}) => void);\n  radiusAdjuster: (val: number) => number,\n  numberOfXAxisTicks: number,\n}\n\nconst createScatterPlot = (input: Input) => {\n  const {\n    container, size: {width, height},\n    averageLineText, quadrantLabels, labelFont, margin, data, xScale, yScale,\n    axisMinMax: {minX, maxX, minY, maxY}, axisLabelColor, quadrantLabelColor,\n    quadrantBackgroundColors, onQuadrantLabelMouseLeave, onQuadrantLabelMouseMove,\n    chartWidth, radiusAdjuster, numberOfXAxisTicks, yLineText,\n  } = input;\n\n  if (quadrantBackgroundColors) {\n    // Add background colors\n     container\n        .append(\"rect\")\n        .attr(\"x\", xScale(1))\n        .attr(\"y\", 0)\n        .attr(\"width\", xScale(maxX) - xScale(1))\n        .attr(\"height\", yScale(0))\n        .attr(\"fill\",  quadrantBackgroundColors.I ? quadrantBackgroundColors.I : '#fff')\n     container\n        .append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", xScale(1))\n        .attr(\"height\", yScale(0))\n        .attr(\"fill\",  quadrantBackgroundColors.II ? quadrantBackgroundColors.II : '#fff')\n     container\n        .append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", yScale(0))\n        .attr(\"width\", xScale(1))\n        .attr(\"height\", yScale(minY) - yScale(0))\n        .attr(\"fill\",  quadrantBackgroundColors.III ? quadrantBackgroundColors.III : '#fff')\n     container\n        .append(\"rect\")\n        .attr(\"x\", xScale(1))\n        .attr(\"y\", yScale(0))\n        .attr(\"width\", xScale(maxX) - xScale(1))\n        .attr(\"height\", yScale(minY) - yScale(0))\n        .attr(\"fill\",  quadrantBackgroundColors.IV ? quadrantBackgroundColors.IV : '#fff')\n  }\n\n  // Add X axis\n  const xAxis = container.append('g')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(\n      d3.axisBottom(xScale)\n        .ticks(numberOfXAxisTicks)\n        .tickFormat(t => formatTicks(t as number) as any)\n    )\n    xAxis.select('path')\n      .attr('stroke', 'none')\n    xAxis.selectAll('.tick line')\n      .attr('stroke', 'none')\n    xAxis.selectAll('text')\n      .attr('fill', axisLabelColor ? axisLabelColor : '#333')\n      .style('opacity', chartWidth < 300 ? 0 : 0.75)\n      .style('font-size', `clamp(7px, ${chartWidth * 0.0175}px, 12px)`)\n      .html(d => formatTicks(d as number))\n\n  // gridlines in x axis function\n  const makeGridlinesX: any = () => d3.axisBottom(xScale).ticks(numberOfXAxisTicks);\n\n\n  // gridlines in y axis function\n  const makeGridlinesY: any = () => d3.axisLeft(yScale).ticks(10);\n\n  // add the X gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .attr('transform', 'translate(0,' + height + ')')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesX()\n          .tickSize(-height)\n          .tickFormat(''),\n      );\n\n  // add the Y gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n\n  // add quadrant lines\n  container.append('line')\n    .attr('x1',xScale(minX))\n    .attr('x2',xScale(maxX))\n    .attr('y1',yScale(0))\n    .attr('y2',yScale(0))\n    .attr('stroke-width', '2px')\n    .style('pointer-events', 'none')\n    .attr('stroke', '#333');\n  container.append('line')\n    .attr('x1',xScale(1))\n    .attr('x2',xScale(1))\n    .attr('y1',yScale(minY))\n    .attr('y2',0 - margin.top)\n    .attr('stroke-width', '2px')\n    .style('pointer-events', 'none')\n    .attr('stroke', '#333');\n\n  if (averageLineText) {\n    container.append('text')\n      .attr('x',xScale(1) + 4)\n      .attr('y',-10)\n      .attr('fill', axisLabelColor ? axisLabelColor : '#333')\n      .style('opacity', 0.8)\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .style('font-size', `clamp(9px, ${chartWidth * 0.0155}px, 15px)`)\n      .style('font-weight', '600')\n      .style('pointer-events', 'none')\n      .text(averageLineText);\n\n  }\n\n  if (yLineText) {\n    container.append('text')\n      .attr('x',8)\n      .attr('y',yScale(0) - 8)\n      .attr('fill', axisLabelColor ? axisLabelColor : '#333')\n      .style('opacity', 0.8)\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .style('font-size', `clamp(9px, ${chartWidth * 0.0155}px, 15px)`)\n      .style('font-weight', '600')\n      .style('pointer-events', 'none')\n      .text(yLineText);\n\n  }\n\n  if (quadrantLabels !== undefined) {\n    const getLabel = appendQuadrantLabel(\n      container,\n      labelFont,\n      `clamp(8px, ${chartWidth * 0.025}px, 16px)`,\n      quadrantLabelColor,\n      onQuadrantLabelMouseMove,\n      onQuadrantLabelMouseLeave,\n    );\n    if (quadrantLabels.I !== undefined) {\n      const xVal = width - 4;\n      const yVal = yScale(maxY) + 20;\n      const textParts = (quadrantLabels.I as string).split('\\n');\n      getLabel(xVal, yVal, textParts, 'end', 'I');\n    }\n    if (quadrantLabels.II !== undefined) {\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(maxY) + 20;\n      const textParts = (quadrantLabels.II as string).split('\\n');\n      getLabel(xVal, yVal, textParts, 'start', 'II');\n    }\n    if (quadrantLabels.III !== undefined) {\n      const textParts = (quadrantLabels.III as string).split('\\n');\n      const xVal = xScale(minX) + 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      getLabel(xVal, yVal, textParts, 'start', 'III');\n    }\n    if (quadrantLabels.IV !== undefined) {\n      const textParts = (quadrantLabels.IV as string).split('\\n');\n      const xVal = width - 4;\n      const yVal = yScale(minY) - ((textParts.length - 1) * 15) - 6;\n      getLabel(xVal, yVal, textParts, 'end', 'IV');\n    }\n  }\n\n  // Add dots\n  container.append('g')\n    .selectAll('dot')\n    .data(data)\n    .enter()\n    .append('circle')\n      .attr('cx', ({x}) => xScale(x))\n      .attr('cy', ({y}) => yScale(y))\n      .attr('r', ({radius}) => radiusAdjuster(radius ? radius : 4))\n      .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n      .style('stroke', ({stroke}) => stroke ? stroke : '#333')\n      .style('stroke-width', '0.5px')\n      .style('opacity', ({faded}) => faded ? 0.1 : 1)\n      .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n      .on('mouseover', onMouseEnter)\n      .on('mousemove', d => {\n          if (d.onMouseMove) {\n            d.onMouseMove(d, {x: (d3 as any).event.pageX, y: (d3 as any).event.pageY})\n          }\n        })\n      .on('mouseout', d => {\n        onMouseLeave();\n        if (d.onMouseLeave) {\n          d.onMouseLeave(d)\n        }\n      })\n      .on('click', d => d.onClick ? d.onClick(d) : undefined);\n\n  const hoveredBackground = container\n    .append('circle')\n      .style('pointer-events', 'none')\n      .style('fill', 'none');\n\n  const hoveredForeground = container\n    .append('circle')\n      .style('pointer-events', 'none')\n      .style('fill', 'none');\n\n  function onMouseEnter(d: Datum) {\n    hoveredBackground\n      .attr('cx', xScale(d.x))\n      .attr('cy', yScale(d.y))\n      .attr('r', radiusAdjuster(d.radius ? d.radius * 4 : 16))\n      .style('fill', d.fill ? d.fill : '#69b3a2')\n      .style('opacity', '0.2')\n\n    hoveredForeground\n      .attr('cx', xScale(d.x))\n      .attr('cy', yScale(d.y))\n      .attr('r', radiusAdjuster(d.radius ? d.radius : 4))\n      .style('fill', d.fill ? d.fill : '#69b3a2')\n      .style('stroke', d.stroke ? d.stroke : '#333')\n      .style('stroke-width', '0.5px')\n  }\n\n  const onMouseLeave = () => {\n    hoveredBackground.style('fill', 'none');\n    hoveredForeground\n      .style('fill', 'none')\n      .style('stroke', 'none')\n  }\n\n  const highlighted = data.find(d => d.highlighted);\n  if (highlighted) {\n    // Add highlighted dot background\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', ({radius}) => radiusAdjuster(radius ? radius * 4 : 16))\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('opacity', '0.2')\n        .style('pointer-events', 'none');\n    // Add highlighted dot over to top\n    container.append('g')\n      .selectAll('dot')\n      .data([highlighted])\n      .enter()\n      .append('circle')\n        .attr('cx', ({x}) => xScale(x))\n        .attr('cy', ({y}) => yScale(y))\n        .attr('r', ({radius}) => radiusAdjuster(radius ? radius : 4))\n        .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n        .style('stroke', ({stroke}) => stroke ? stroke : '#333')\n        .style('stroke-width', '0.5px')\n        .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n        .on('mousemove', d => {\n          if (d.onMouseMove) {\n            d.onMouseMove(d, {x: (d3 as any).event.pageX, y: (d3 as any).event.pageY})\n          }\n        })\n        .on('mouseout', d => {\n          if (d.onMouseLeave) {\n            d.onMouseLeave(d)\n          }\n        })\n        .on('click', d => d.onClick ? d.onClick(d) : undefined);\n  }\n}\n\nexport default createScatterPlot;\n","import * as d3 from 'd3';\nimport partition from 'lodash/partition';\nimport createScatterPlot from './scatterPlot';\nimport createBeeswarm, {\n  maxBeeswarmWidth,\n  minBeeswarmWidth,\n} from './beeswarm';\nimport {Datum, Dimensions} from './types';\n\nconst minExpectedScreenSize = 820;\n\ninterface Input {\n  svg: d3.Selection<any, unknown, null, undefined>;\n  // tooltip: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  axisLabels?: {\n    left?: string,\n    leftUp?: string\n    leftDown?: string\n    bottom?: string\n    bottomLeft?: string\n    bottomRight?: string\n  };\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  averageLineText?: string;\n  yLineText?: string;\n  quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string, V?: string};\n  quadrantBackgroundColors?: {I?: string, II?: string, III?: string, IV?: string, V?: string};\n  labelFont?: string;\n  zeroAxisLabel?: string;\n  axisLabelColor?: string;\n  quadrantLabelColor?: string;\n  onQuadrantLabelMouseMove?: (quadrant: {id: string, label: string}, coords: {x: number, y: number}) => void;\n  onQuadrantLabelMouseLeave?: (quadrant: {id: string, label: string}) => void;\n}\n\nexport default (input: Input) => {\n  const {\n    svg, data, size, axisLabels, axisMinMax,\n    averageLineText, quadrantLabels, labelFont,\n    zeroAxisLabel, axisLabelColor, quadrantLabelColor,\n    quadrantBackgroundColors,\n    onQuadrantLabelMouseMove, onQuadrantLabelMouseLeave,\n    yLineText,\n  } = input;\n\n  const [scatterplotData, beeswarmData] = partition(data, (d) => d.x > 0);\n\n  const margin = {top: 30, right: 15, bottom: 60, left: 50};\n  const width = size.width - margin.left - margin.right;\n  const height = size.height - margin.bottom - margin.top;\n  const beeswarmWidth = Math.max(minBeeswarmWidth, Math.min(width * 0.19, maxBeeswarmWidth))\n  const scatterplotWidth = width - beeswarmWidth;\n\n  const smallerSize = width < height ? width : height;\n  const radiusAdjuster = (radius: number) => (smallerSize / minExpectedScreenSize) * radius;\n\n  // append the svg object to the body of the page\n  svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n  svg.append(\"defs\").append(\"marker\")\n    .attr(\"id\", \"arrowhead\")\n    .attr(\"viewBox\", \"0 -5 10 10\")\n    .attr(\"refY\", 2)\n    .attr(\"markerWidth\", 4)\n    .attr(\"markerHeight\", 4)\n    .attr(\"orient\", \"auto-start-reverse\")\n  .append(\"path\")\n    .attr(\"d\", \"M0,0 L4,2 0,4\")\n    .attr('fill', axisLabelColor ? axisLabelColor : '#333333');\n\n  const scatterplot = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + (margin.left + beeswarmWidth) + ',' + margin.top + ')');\n\n  const beeswarm = svg\n    .append('g')\n      .attr('transform',\n            'translate(' + (margin.left) + ',' + margin.top + ')');\n\n  const allXValues = scatterplotData.map(({x}) => x);\n\n  let minX = axisMinMax && axisMinMax.minX !== undefined ? axisMinMax.minX : d3.min(allXValues) as number;\n  let maxX = axisMinMax && axisMinMax.maxX !== undefined ? axisMinMax.maxX : d3.max(allXValues) as number;\n\n\n  const tickMarksForMinMax = (min: number, max: number) => {\n    const digits = min.toString().length + max.toString().length;\n    return digits - 3;\n  }\n\n  if (maxX < 100 || isNaN(maxX)) {\n    maxX = 100;\n  }\n  if (minX >= 0.01 || isNaN(minX)) {\n    minX = 0.01;\n  }\n  const xScale = d3.scaleLog()\n    .domain([minX, maxX])\n    .range([ 0, scatterplotWidth ])\n    .nice();\n  const numberOfXAxisTicks = tickMarksForMinMax(\n    parseFloat(xScale.invert(0).toFixed(5)),\n    parseFloat(xScale.invert(scatterplotWidth).toFixed(5))\n  );\n  minX = xScale.invert(0);\n  maxX = xScale.invert(scatterplotWidth);\n\n  const allYValues = [...scatterplotData, ...beeswarmData].map(({y}) => y);\n\n  const rawMinY = axisMinMax && axisMinMax.minY !== undefined ? axisMinMax.minY : d3.min(allYValues);\n  const rawMaxY = axisMinMax && axisMinMax.maxY !== undefined ? axisMinMax.maxY : d3.max(allYValues);\n\n  let minY = rawMinY && !isNaN(rawMinY) ? Math.floor(rawMinY) : -1;\n  let maxY = rawMaxY && !isNaN(rawMaxY) ? Math.ceil(rawMaxY) : 1;\n\n  const largerAbsY = Math.abs(minY) > Math.abs(maxY) ? Math.abs(minY) : Math.abs(maxY);\n  if (Math.abs(maxY) < largerAbsY / 2) {\n    maxY = largerAbsY / 2;\n  }\n  if (Math.abs(minY) < largerAbsY / 2) {\n    minY = largerAbsY / -2;\n  }\n\n  const yScale = d3.scaleLinear()\n    .domain([minY, maxY])\n    .range([ height, 0]);\n  \n  // append X axis label\n  const bottomClassName = 'pswot-plot-bottom-label';\n  const axistFontSize = `clamp(0.75rem, ${width * 0.015}px, 1rem)`;\n  const axisSmallTextFontSize = `clamp(0.75rem, ${width * 0.015}px, 0.875rem)`;\n  const arrowRight = ' →';\n  const arrowLeft = '← ';\n  const arrowPadding = width > 600 ? 5 : 1;\n\n  const bottomAxisLabel = scatterplot\n    .append('text')\n      .attr('y', height + (margin.top * 1.5))\n      .attr('x', width > 400 ? xScale(1) : 0)\n      .attr('fill', axisLabelColor ? axisLabelColor : '#333')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .style('font-size', axistFontSize)\n      .style('text-transform', 'uppercase')\n\n  bottomAxisLabel.append('tspan')\n      .attr('dx', arrowPadding * 3)\n      .style('font-size', axisSmallTextFontSize)\n      .text(axisLabels && axisLabels.bottomLeft ? axisLabels.bottomLeft : '');\n\n  bottomAxisLabel.append('tspan')\n      .attr('class', bottomClassName)\n      .style('font-size', axistFontSize)\n      .style('font-weight', '600')\n      .attr('dx', arrowPadding * 4.5)\n      .text(axisLabels && axisLabels.bottom ? arrowLeft + axisLabels.bottom + arrowRight : '');\n\n  bottomAxisLabel.append('tspan')\n      .attr('dx', arrowPadding * 4.5)\n      .style('font-size', axisSmallTextFontSize)\n      .text(axisLabels && axisLabels.bottomRight ? axisLabels.bottomRight : '');\n\n  // append Y axis label\n  const leftAxisClassName = 'pswot-plot-left-axis-label';\n  const leftAxisLabel = svg\n    .append('text')\n    .attr('transform', 'rotate(-90)')\n      .attr('y', margin.right / 2)\n      .attr('x', 0 - (height / 2 + margin.top + margin.bottom))\n      .attr('fill', axisLabelColor ? axisLabelColor : '#333')\n      .attr('dy', '1.25em')\n      .style('text-anchor', 'middle')\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .style('text-transform', 'uppercase')\n\n  leftAxisLabel.append('tspan')\n      .attr('dx', arrowPadding * 3)\n      .style('font-size', axisSmallTextFontSize)\n      .text(axisLabels && axisLabels.leftDown ? axisLabels.leftDown : '');\n\n  leftAxisLabel.append('tspan')\n      .attr('class', leftAxisClassName)\n      .style('font-size', axistFontSize)\n      .style('font-weight', '600')\n      .attr('dx', arrowPadding * 4.5)\n      .text(axisLabels && axisLabels.left ? arrowLeft + axisLabels.left + arrowRight : '');\n\n  leftAxisLabel.append('tspan')\n      .attr('dx', arrowPadding * 4.5)\n      .style('font-size', axisSmallTextFontSize)\n      .text(axisLabels && axisLabels.leftUp ? axisLabels.leftUp : '');\n\n  createBeeswarm({\n    container: beeswarm,\n    data: [...beeswarmData],\n    size: {width: beeswarmWidth - margin.right, height},\n    xScale, yScale,\n    label: quadrantLabels ? quadrantLabels.V : undefined,\n    labelFont, maxY,\n    zeroAxisLabel,\n    margin, axisLabelColor,\n    quadrantLabelColor,\n    quadrantBackgroundColors,\n    onQuadrantLabelMouseMove, onQuadrantLabelMouseLeave,\n    chartWidth: width,\n    radiusAdjuster,\n  });\n\n  createScatterPlot({\n    container: scatterplot,\n    data: [...scatterplotData],\n    size: {width: scatterplotWidth, height},\n    margin,\n    averageLineText, quadrantLabels, labelFont,\n    xScale, yScale,\n    axisMinMax: {minX, maxX, minY, maxY}, axisLabelColor,\n    quadrantLabelColor,\n    quadrantBackgroundColors,\n    onQuadrantLabelMouseMove, onQuadrantLabelMouseLeave,\n    chartWidth: width,\n    radiusAdjuster,\n    numberOfXAxisTicks,\n    yLineText,\n  });\n};\n","import * as d3 from 'd3';\nimport {Datum, Dimensions} from './types';\nimport {appendQuadrantLabel} from './Utils';\n\nexport const maxBeeswarmWidth = 170;\nexport const minBeeswarmWidth = 110;\n\ninterface Input {\n  container: d3.Selection<any, unknown, null, undefined>;\n  data: Datum[];\n  size: Dimensions;\n  chartWidth: number;\n  xScale: d3.ScaleLogarithmic<number, number, never>;\n  yScale: d3.ScaleLinear<number, number, never>;\n  label: string | undefined;\n  zeroAxisLabel: string | undefined;\n  labelFont: string | undefined;\n  maxY: number;\n  margin: {\n    top: number,\n    right: number,\n    bottom: number,\n    left: number,\n  }\n  axisLabelColor: string | undefined;\n  quadrantLabelColor: string | undefined;\n  quadrantBackgroundColors?: {V?: string};\n  onQuadrantLabelMouseMove: undefined | ((quadrant: {id: string, label: string}, coords: {x: number, y: number}) => void);\n  onQuadrantLabelMouseLeave: undefined | ((quadrant: {id: string, label: string}) => void);\n  radiusAdjuster: (val: number) => number,\n}\n\ninterface ForceDatum extends Datum {\n  orginalX: number;\n  orginalY: number;\n}\n\nconst createBeeswarm = (input: Input) => {\n  const {\n    container, size: {width, height}, yScale, label, labelFont, maxY, zeroAxisLabel,\n    axisLabelColor, quadrantLabelColor, quadrantBackgroundColors,\n    onQuadrantLabelMouseMove, onQuadrantLabelMouseLeave, chartWidth,\n    radiusAdjuster,\n  } = input;\n\n  const data: ForceDatum[] = input.data.map(d => ({...d, orginalX: d.x, orginalY: d.y}));\n\n  if (quadrantBackgroundColors) {\n    // Add background colors\n     container\n        .append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"fill\",  quadrantBackgroundColors.V ? quadrantBackgroundColors.V : '#fff')\n  }\n\n\n  const makeGridlinesY: any = () => d3.axisLeft(yScale).ticks(10);\n  // add the Y gridlines\n  container.append('g')\n      .attr('class', 'grid')\n      .style('opacity', '0.25')\n      .style('stroke-dasharray', '3 1')\n      .call(makeGridlinesY()\n          .tickSize(-width)\n          .tickFormat(''),\n      );\n  container.append('line')\n    .attr('x1', width)\n    .attr('x2', width)\n    .attr('y1', 0)\n    .attr('y2', height)\n    .attr('stroke', '#333')\n    .style('pointer-events', 'none')\n    .style('opacity', '0.25')\n    .style('stroke-dasharray', '3 1')\n\n  // add quadrant lines\n  container.append('line')\n    .attr('x1',0)\n    .attr('x2',width)\n    .attr('y1',yScale(0))\n    .attr('y2',yScale(0))\n    .attr('stroke-width', '2px')\n    .style('pointer-events', 'none')\n    .attr('stroke', '#333');\n\n  if (zeroAxisLabel !== undefined) {\n    container.append('text')\n      .attr('x', 4)\n      .attr('y', height - 4)\n      .attr('fill', axisLabelColor ? axisLabelColor : '#333')\n      .style('opacity', 0.8)\n      .style('font-family', labelFont ? labelFont : \"'Source Sans Pro',sans-serif\")\n      .style('font-size', `clamp(9px, ${chartWidth * 0.0155}px, 15px)`)\n      .style('font-weight', '600')\n      .style('pointer-events', 'none')\n      .text(zeroAxisLabel);\n  }\n\n  const multiplier = 1 - ((maxBeeswarmWidth - (width + 30)) / (maxBeeswarmWidth - minBeeswarmWidth));\n  const force = 6 * (1 + multiplier);\n\n  const simulation = d3.forceSimulation(data)\n      .force('x', d3.forceX(width / 2).strength(9))\n      .force(\"y\", d3.forceY(d => yScale(d.y ? d.y + 0 : 0 )))\n      .force(\"collide\", d3.forceCollide(force))\n      .stop();\n\n  for (let i = 0; i < 120; ++i) simulation.tick();\n\n  container\n    .selectAll('dot')\n    .data(data)\n    .enter()\n    .append('circle')\n      .attr('r', ({radius}) => radiusAdjuster(radius ? radius : 4))\n      .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n      .style('stroke', ({stroke}) => stroke ? stroke : '#333')\n      .style('stroke-width', '0.5px')\n      .attr(\"cx\", d => d.x)\n      .attr(\"cy\", d => yScale(d.orginalY))\n      .style('opacity', ({faded}) => faded ? 0.25 : 1)\n      .on('mouseover', onMouseEnter)\n      .on('mousemove', d => {\n          if (d.onMouseMove) {\n            d.onMouseMove(\n              {...d, x: d.orginalX, y: d.orginalY},\n              {x: (d3 as any).event.pageX, y: (d3 as any).event.pageY}\n            )\n          }\n        })\n      .on('mouseout', d => {\n        onMouseLeave();\n        if (d.onMouseLeave) {\n          d.onMouseLeave({...d, x: d.orginalX})\n        }\n      })\n      .on('click', d => d.onClick ? d.onClick(d) : undefined);\n\n  const hoveredBackground = container\n    .append('circle')\n      .style('pointer-events', 'none')\n      .style('fill', 'none');\n\n  const hoveredForeground = container\n    .append('circle')\n      .style('pointer-events', 'none')\n      .style('fill', 'none')\n\n  function onMouseEnter(d: ForceDatum) {\n    hoveredBackground\n      .attr('cx', d.x)\n      .attr(\"cy\", yScale(d.orginalY))\n      .attr('r', radiusAdjuster(d.radius ? d.radius * 4 : 16))\n      .style('fill', d.fill ? d.fill : '#69b3a2')\n      .style('opacity', '0.2')\n\n    hoveredForeground\n      .attr('cx', d.x)\n      .attr(\"cy\", yScale(d.orginalY))\n      .attr('r', radiusAdjuster(d.radius ? d.radius : 4))\n      .style('fill', d.fill ? d.fill : '#69b3a2')\n      .style('stroke', d.stroke ? d.stroke : '#333')\n      .style('stroke-width', '0.5px')\n  }\n\n  const onMouseLeave = () => {\n    hoveredBackground.style('fill', 'none');\n    hoveredForeground\n      .style('fill', 'none')\n      .style('stroke', 'none')\n  }\n\n  const highlighted = data.find(d => d.highlighted);\n    if (highlighted) {\n      // Add highlighted dot background\n      container.append('g')\n        .selectAll('dot')\n        .data([highlighted])\n        .enter()\n        .append('circle')\n          .attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => yScale(d.orginalY))\n          .attr('r', ({radius}) => radiusAdjuster(radius ? radius * 4 : 16))\n          .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n          .style('opacity', '0.4')\n          .style('pointer-events', 'none');\n      // Add highlighted dot over to top\n      container.append('g')\n        .selectAll('dot')\n        .data([highlighted])\n        .enter()\n        .append('circle')\n          .attr(\"cx\", d => d.x)\n          .attr(\"cy\", d => yScale(d.orginalY))\n          .attr('r', ({radius}) => radiusAdjuster(radius ? radius : 4))\n          .style('fill', ({fill}) => fill ? fill : '#69b3a2')\n          .style('stroke', ({stroke}) => stroke ? stroke : '#333')\n          .style('stroke-width', '0.5px')\n          .style('cursor', ({onClick}) => onClick ? 'pointer' : 'default')\n          .on('mousemove', d => {\n            if (d.onMouseMove) {\n              d.onMouseMove(\n                {...d, x: d.orginalX, y: d.orginalY},\n                {x: (d3 as any).event.pageX, y: (d3 as any).event.pageY}\n              )\n            }\n          })\n          .on('mouseout', d => {\n            if (d.onMouseLeave) {\n              d.onMouseLeave(d)\n            }\n          })\n          .on('click', d => d.onClick ? d.onClick(d) : undefined);\n    }\n\n  if (label !== undefined) {\n    const getLabel = appendQuadrantLabel(\n      container,\n      labelFont,\n      `clamp(8px, ${chartWidth * 0.025}px, 16px)`,\n      quadrantLabelColor,\n      onQuadrantLabelMouseMove,\n      onQuadrantLabelMouseLeave,\n    );\n\n    const textParts = (label as string).split('\\n');\n    const xVal = width / 2;\n    const yVal = yScale(maxY) + 20;\n    getLabel(xVal, yVal, textParts, 'middle', 'V');\n  }\n\n}\n\nexport default createBeeswarm;\n","import { select } from 'd3';\nimport React, {useState, useEffect, useRef} from 'react';\nimport styled from 'styled-components';\nimport createChart from './createChart';\nimport debounce from 'lodash/debounce';\nimport {Datum} from './types';\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n  margin: auto;\n`;\n\nconst SizingElm = styled.div`\n  height: 100%;\n  width: 100%;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\ninterface Props {\n  id: string;\n  data: Datum[];\n  axisLabels?: {\n    left?: string,\n    leftUp?: string\n    leftDown?: string\n    bottom?: string\n    bottomLeft?: string\n    bottomRight?: string\n  };\n  axisMinMax?: {\n    minX?: number,\n    maxX?: number,\n    minY?: number,\n    maxY?: number,\n  };\n  averageLineText?: string;\n  yLineText?: string;\n  zeroAxisLabel?: string;\n  quadrantLabels?: {I?: string, II?: string, III?: string, IV?: string, V?: string};\n  axisLabelColor?: string;\n  quadrantLabelColor?: string;\n  quadrantBackgroundColors?: {I?: string, II?: string, III?: string, IV?: string, V?: string};\n  onQuadrantLabelMouseMove?: (quadrant: {id: string, label: string}, coords: {x: number, y: number}) => void;\n  onQuadrantLabelMouseLeave?: (quadrant: {id: string, label: string}) => void;\n}\n\nexport const PSwotPlot = (props: Props) => {\n  const {\n    id, data, axisLabels, axisMinMax, averageLineText, quadrantLabels,\n    zeroAxisLabel, axisLabelColor, quadrantLabelColor, quadrantBackgroundColors,\n    onQuadrantLabelMouseMove, onQuadrantLabelMouseLeave, yLineText,\n  } = props;\n\n  const sizingNodeRef = useRef<HTMLDivElement | null>(null);\n  const svgNodeRef = useRef<any>(null);\n\n  const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const updateWindowWidth = debounce(() => {\n      setWindowWidth(window.innerWidth);\n    }, 500);\n    window.addEventListener('resize', updateWindowWidth);\n    return () => {\n      window.removeEventListener('resize', updateWindowWidth);\n    };\n  }, []);\n\n\n  useEffect(() => {\n    let svgNode: HTMLDivElement | null = null;\n    if (svgNodeRef && svgNodeRef.current && sizingNodeRef && sizingNodeRef.current) {\n      const sizingNode = sizingNodeRef.current;\n      svgNode = svgNodeRef.current;\n      const svg = select(svgNode);\n      createChart({\n        svg, data: [...data], size: {\n          width: sizingNode.clientWidth, height: sizingNode.clientHeight,\n        },\n        axisLabels,\n        axisMinMax,\n        averageLineText,\n        quadrantLabels,\n        zeroAxisLabel,\n        axisLabelColor,\n        quadrantLabelColor,\n        quadrantBackgroundColors,\n        onQuadrantLabelMouseMove,\n        onQuadrantLabelMouseLeave,\n        yLineText,\n      });\n    }\n    return () => {\n      if (svgNode) {\n        svgNode.innerHTML = '';\n      }\n    };\n  }, [svgNodeRef, sizingNodeRef, windowWidth, props]);\n\n  return (\n    <Root>\n      <SizingElm ref={sizingNodeRef}>\n        <svg ref={svgNodeRef} key={id + windowWidth + 'svg'} className={'react-fast-charts-root-svg'} />\n      </SizingElm>\n    </Root>\n  );\n};\n\nexport {Datum};\n\nexport default PSwotPlot;\n","import styled from 'styled-components/macro';\n\ninterface Input {\n  title: string;\n  color: string;\n  rows: string[][];\n  boldColumns?: number[];\n  additionalHTML?: string;\n}\n\nexport const RapidTooltipRoot = styled.div`\n  position: fixed;\n  z-index: 3000;\n  max-width: 16rem;\n  padding-bottom: 0.5rem;\n  font-size: 0.7rem;\n  line-height: 1.4;\n  text-transform: none;\n  transition: opacity 0.15s ease;\n  color: #333;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-radius: 4px;\n  box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.15);\n  pointer-events: none;\n  transform: translate(-50%, calc(-100% - 1.5rem));\n  display: none;\n  \n  .rapid-tooltip-title {\n    padding: 0.5rem;\n  }\n\n  .rapid-tooltip-subsection-grid {\n    display: grid;\n    grid-gap: 0.5rem;\n    padding: 0.5rem;\n  }\n\n  .rapid-tooltip-cell {\n    display: flex;\n  }\n\n  .rapid-tooltip-arrow-container {\n    width: 100%;\n    height: 0.5rem;\n    display: flex;\n    justify-content: center;\n    position: absolute;\n    transform: translate(0, 100%);\n  }\n\n  .rapid-tooltip-arrow {\n    width: 0.5rem;\n    height: 0.5rem;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    left: -0.25rem;\n\n    &:before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      border-left: 9px solid transparent;\n      border-right: 9px solid transparent;\n      border-top: 9px solid #dfdfdf;\n    }\n\n    &:after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 1px;\n      border-left: 8px solid transparent;\n      border-right: 8px solid transparent;\n      border-top: 8px solid #fff;\n    }\n  }\n`;\n\nexport const getStandardTooltip = (input: Input) => {\n  const columnCount = input.rows.length && input.rows[0].length ? input.rows[0].length : 1;\n\n  let rows: string = '';\n  input.rows.forEach(r => {\n    let row = '';\n    r.forEach((c, i) => {\n      const alignment = i === 0\n        ? 'justify-content: flex-start; text-align: left;'\n        : 'justify-content: flex-end; text-align: right;';\n      const style = input.boldColumns && input.boldColumns.includes(i)\n        ? `style=\"font-weight: 600;${alignment}\"` : '';\n      row = row + `<div class=\"rapid-tooltip-cell\" ${style}>${c}</div>`;\n    });\n    rows = rows + row;\n  });\n\n  const additionalContent = input.additionalHTML ? `<div>${input.additionalHTML}</div>` : '';\n\n  return `\n    <div>\n      <div class=\"rapid-tooltip-title\" style=\"background-color: ${input.color};\">\n        ${input.title}\n      </div>\n      <div\n        class=\"rapid-tooltip-subsection-grid\"\n        style=\"display: grid; grid-template-columns: repeat(${columnCount}, auto);\"\n      >\n        ${rows}\n      </div>\n      ${additionalContent}\n    </div>\n    <div class=\"rapid-tooltip-arrow-container\">\n      <div class=\"rapid-tooltip-arrow\"></div>\n    </div>\n  `;\n};","import React, {useRef, useCallback} from 'react'\nimport PSwotPlot, {Datum} from 'react-pswot-plot'\nimport RawData from './data/hefei_employees.json';\nimport IndustryData from './data/naics_2017.json';\nimport styled from 'styled-components';\nimport {getStandardTooltip, RapidTooltipRoot} from './rapidTooltip';\nimport {rgba} from 'polished';\n\nconst Root = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;  \n`;\n\nconst colorMap = [\n  { id: '0', color: '#A973BE' },\n  { id: '1', color: '#F1866C' },\n  { id: '2', color: '#FFC135' },\n  { id: '3', color: '#93CFD0' },\n  { id: '4', color: '#488098' },\n  { id: '5', color: '#77C898' },\n  { id: '6', color: '#6A6AAD' },\n  { id: '7', color: '#D35162' },\n  { id: '8', color: '#F28188' },\n]\n\nconst App = () => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n\n  const setHovered = (datum: {label: string, fill?: string, id?: string, x?: number, y?: number}, coords: {x: number, y: number}) => {\n    const node = tooltipRef.current;\n    const industry = IndustryData.find(n => n.code === datum.id);\n    if (node) {\n      const rows: string[][] = [];\n      if (industry && industry.code) {\n        rows.push(\n          ['Code', industry.code],\n        )\n      } else {\n        rows.push(\n          ['Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.']\n        )\n      }\n      if (datum.x !== undefined) {\n        rows.push(\n          ['RCA', parseFloat(datum.x.toFixed(3)).toString() ],\n        )\n      }\n      if (datum.y) {\n        rows.push(\n          ['Density', parseFloat(datum.y.toFixed(3)).toString() ],\n        )\n      }\n      node.innerHTML = getStandardTooltip({\n        title: datum.label,\n        color: datum.fill ? rgba(datum.fill, 0.5) : '#f69c7c',\n        rows,\n        boldColumns: [1],\n      });\n      node.style.top = coords.y + 'px';\n      node.style.left = coords.x + 'px';\n      node.style.display = 'block';\n    }\n  };\n\n  const removeHovered = useCallback(() => {\n    const node = tooltipRef.current;\n    if (node) {\n      node.style.display = 'none';\n    }\n  }, [tooltipRef]);\n\n  const data: Datum[] = RawData.map((d) => {\n    const industry = IndustryData.find(n => n.code === d.naics.toString());\n    const naics_id = industry ? industry.naics_id : '';\n    let topLevelParentId: string = naics_id.toString();\n    let current = IndustryData.find(datum => datum.naics_id === naics_id);\n    while(current && current.parent_id !== null) {\n      // eslint-disable-next-line\n      current = IndustryData.find(datum => datum.naics_id === (current as any).parent_id);\n      if (current && current.parent_id !== null) {\n        topLevelParentId = current.parent_id.toString();\n      } else if (current && current.naics_id !== null) {\n        topLevelParentId = current.naics_id.toString();\n      }\n    }\n    if (parseInt(topLevelParentId, 10) > 8) {\n      console.error(current);\n      throw new Error('Parent out of range')\n    }\n    const parentColor = colorMap.find(c => c.id === topLevelParentId);\n    return {\n      id: d.naics.toString(),\n      label: industry ? industry.name : d.naics.toString(),\n      x: d.rca_emp,\n      y: d.density_emp,\n      fill: parentColor ? parentColor.color : undefined,\n      // highlighted: !Math.round(Math.random()),\n      // faded: !Math.round(Math.random()),\n      onMouseMove: setHovered,\n      onMouseLeave: removeHovered,\n    }\n  })\n\n  return (\n    <Root>\n      <Container>\n        <PSwotPlot\n          id={'react-pswot-plot-demo'}\n          data={data}\n          averageLineText={'Relative Advantage = 1'}\n          yLineText={'Technological Fit = 0'}\n          quadrantLabels={{\n            I: 'Strength',\n            II: 'Opportunity',\n            III: 'Threat',\n            IV: 'Weakness',\n            V: 'Potential',\n          }}\n          quadrantBackgroundColors={{\n            I: '#dadbdd',\n            II: '#e6e7e8',\n            III: '#f2f3f3',\n            IV: '#fafafb',\n            V: '#edf6f4',\n          }}\n          zeroAxisLabel={'Relative Advantage = 0'}\n          axisLabels={{\n            left: 'Predicted Density Change',\n            leftUp: 'Growing',\n            leftDown: 'Decreasing',\n            bottom: 'Relative Advantage',\n            bottomLeft: 'Lower',\n            bottomRight: 'Higher',\n          }}\n          axisLabelColor={'#333'}\n          quadrantLabelColor={'#f69c7c'}\n          onQuadrantLabelMouseMove={setHovered}\n          onQuadrantLabelMouseLeave={removeHovered}\n        />\n        <RapidTooltipRoot ref={tooltipRef} />\n      </Container>\n    </Root>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}